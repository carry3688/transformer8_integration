Type: <class 'dict'>
Content:
{'model_state_dict': OrderedDict([('encoder0x0100.wq.0x0000.weight', tensor([[ 0x0021,  0x0029, 0xFFBD, 0xFFD3,  0x0063,  0x003D],
        [0xFFED, 0xFFEA, 0xFFAC,  0x0003, 0xFFB2, 0xFFFB],
        [0xFFFF,  0x0001, 0xFFBE,  0x0044, 0xFFF8, 0xFFD8]])), ('encoder0x0100.wq.0x0000.bias', tensor([ 0x007F, 0xFFD9, 0xFFAA])), ('encoder0x0100.wq.0x0100.weight', tensor([[0xFFB5, 0xFFE9, 0xFFD0,  0x002A, 0xFFF5, 0xFFC3],
        [ 0x000B,  0x0001,  0x0038,  0x0045, 0xFF78,  0x0015],
        [0xFFA4, 0xFFDA, 0xFFBB, 0xFFED, 0xFFCF,  0x0075]])), ('encoder0x0100.wq.0x0100.bias', tensor([0xFFA5,  0x0014, 0xFFA1])), ('encoder0x0100.wk.0x0000.weight', tensor([[ 0x003C, 0xFFDC, 0xFFF9, 0xFF9C,  0x0002,  0x0012],
        [ 0x0035,  0x0013,  0x000D, 0xFFB3,  0x0007, 0xFF5D],
        [0xFFB4, 0xFFDC, 0xFFDA, 0xFFC1,  0x0050, 0xFF6D]])), ('encoder0x0100.wk.0x0000.bias', tensor([0xFFE3, 0xFFCA, 0xFFB7])), ('encoder0x0100.wk.0x0100.weight', tensor([[ 0x005A,  0x0057, 0xFFF1, 0xFFEE, 0xFFAD, 0xFF59],
        [0xFFD0,  0x0022,  0x0017,  0x0030,  0x0002,  0x00CE],
        [ 0x0011, 0xFF8B, 0xFFE9,  0x000A,  0x005A, 0xFFA9]])), ('encoder0x0100.wk.0x0100.bias', tensor([0xFFEC,  0x002A, 0xFFB2])), ('encoder0x0100.wv.0x0000.weight', tensor([[0xFFAF, 0xFFC7, 0xFFD1,  0x0043, 0xFFFE, 0xFF95],
        [ 0x006D,  0x0060,  0x005F, 0xFFFC,  0x0074, 0xFFA8],
        [0xFFD4, 0xFFDC, 0xFFEE,  0x0006,  0x004C, 0xFF86]])), ('encoder0x0100.wv.0x0000.bias', tensor([ 0x0044, 0xFFDF,  0x0047])), ('encoder0x0100.wv.0x0100.weight', tensor([[ 0x0041,  0x0017,  0x0047, 0xFFAD,  0x0019,  0x0063],
        [0xFFB8,  0x0055,  0x0013, 0xFFA3,  0x002A, 0xFF97],
        [ 0x0009, 0xFF91,  0x0026,  0x005B,  0x003D,  0x004C]])), ('encoder0x0100.wv.0x0100.bias', tensor([0xFFDC, 0xFFAF, 0xFFF9])), ('encoder0x0100.wo.weight', tensor([[ 0x005C,  0x0027,  0x0016, 0xFFDF,  0x0039,
         0xFFAE],
        [0xFFAD, 0xFFDB, 0xFFE3, 0xFFD3,  0x0000,
         0xFFD7],
        [ 0x0045,  0x001F,  0x003E, 0xFFF5,  0x0018,
         0xFFD3],
        [0xFFD1,  0x0092,  0x0035, 0xFFDF,  0x0004,
          0x0048],
        [0xFFCE, 0xFFDD, 0xFFE9,  0x0045, 0xFFF2,
          0x006A],
        [0xFFFC, 0xFFF3,  0x0049, 0xFF9E,  0x006A,
         0xFFDE]])), ('encoder0x0100.wo.bias', tensor([0xFFDF, 0xFFA8,  0x0021,  0x0037,  0x0033,  0x0019])), ('encoder0x0100.norm0x0100.gamma', tensor([0x010C, 0x0113, 0x0101, 0x0114, 0x00DC, 0x0117])), ('encoder0x0100.norm0x0100.beta', tensor([ 0x0000,  0x000A,  0x0005, 0xFFE5, 0x0000,
        0xFFED])), ('encoder0x0100.ff0x0100.weight', tensor([[ 0x00A0, 0xFF58, 0xFFFF, 0xFFE6,  0x000C,  0x0010],
        [0xFFE6, 0xFFB1, 0xFFEE,  0x0045, 0xFFF9, 0xFF88],
        [0xFFB3,  0x000C,  0x000B, 0xFFC9,  0x0019, 0xFFBF],
        [ 0x0036,  0x000D,  0x000E, 0xFF85, 0xFFF1, 0xFF5A],
        [ 0x0020, 0xFFDD, 0xFFC3, 0xFFF7,  0x0081,  0x004F],
        [ 0x0035,  0x009E, 0xFF83, 0xFFE4, 0xFFF8, 0xFF94],
        [0xFF9E, 0xFFA8, 0xFF9A,  0x0003, 0xFF8C,  0x0033],
        [0xFFB9,  0x0019, 0xFF76,  0x0046, 0xFFAC,  0x003A],
        [ 0x006C, 0xFFCA, 0xFFED, 0xFFDF, 0xFFE3, 0xFFF0],
        [0xFFBB,  0x004F, 0xFFB0, 0xFFAB,  0x0036,  0x0075],
        [0xFFA4, 0xFFDC, 0xFFFD,  0x001C,  0x006D,  0x0074],
        [0xFFB8,  0x0063, 0xFF9C, 0xFFA9,  0x007E, 0xFF69]])), ('encoder0x0100.ff0x0100.bias', tensor([ 0x0031, 0xFFDC,  0x003C, 0xFFE8,  0x0019,  0x0060,  0x0030,  0x0070,
         0x0047,  0x0035,  0x003F, 0xFFD9])), ('encoder0x0100.ff0x0200.weight', tensor([[0xFF87, 0xFFD5, 0xFFD4,  0x0009,  0x0044,  0x0069,  0x0027,  0x0056,
          0x0025,  0x003C, 0xFFF9,  0x0008],
        [ 0x007C,  0x005B, 0xFFEC, 0xFFD7,  0x000F, 0xFFCA,  0x0023,  0x0057,
         0xFFF3, 0xFFD4, 0xFFDF, 0xFF79],
        [ 0x0026, 0xFFDF,  0x0021,  0x0048, 0xFFCC,  0x0003,  0x0008,  0x0022,
         0xFFE3,  0x000C, 0xFFD1,  0x003D],
        [ 0x0042, 0xFFE0,  0x0037, 0xFFD1,  0x0056, 0xFFFE, 0xFFCC,  0x002A,
         0xFFCF, 0xFFE2, 0xFFA5, 0xFFF6],
        [0xFF82,  0x0005, 0xFFDB,  0x0086,  0x0014,  0x003B,  0x005F,  0x0054,
         0xFFC9,  0x0042,  0x0017, 0xFFF9],
        [ 0x0035,  0x0061,  0x001D, 0xFFE3, 0xFF89,  0x0023, 0xFFAB, 0xFFEF,
          0x0057, 0xFF85, 0xFFA6,  0x0014]])), ('encoder0x0100.ff0x0200.bias', tensor([0xFFFD, 0xFFE2,  0x0008, 0xFFE5, 0xFFC5,  0x001B])), ('encoder0x0100.norm0x0200.gamma', tensor([0x0106, 0x0122, 0x00EE, 0x011C, 0x00FA, 0x0109])), ('encoder0x0100.norm0x0200.beta', tensor([ 0x000E, 0xFFF9, 0xFFF3, 0xFFD5, 0xFFF1,  0x000B])), ('encoder0x0200.wq.0x0000.weight', tensor([[ 0x0043, 0xFFDE, 0xFFB0,  0x0028,  0x007F,  0x003F],
        [0xFFAC, 0xFF8F, 0xFFF4, 0xFFDD,  0x0025,  0x005B],
        [ 0x0038, 0xFFDA,  0x005C, 0xFFAB, 0xFF93, 0xFFD7]])), ('encoder0x0200.wq.0x0000.bias', tensor([0xFF94,  0x000B, 0xFFB2])), ('encoder0x0200.wq.0x0100.weight', tensor([[0xFFBE, 0xFFC4, 0xFFCF,  0x0030, 0xFFA0,  0x001B],
        [0xFF7D,  0x003A,  0x003A,  0x0048,  0x003E, 0xFFD3],
        [0xFFEE, 0xFF6B, 0xFFAF,  0x003C,  0x0062, 0xFFB0]])), ('encoder0x0200.wq.0x0100.bias', tensor([ 0x0066,  0x000D, 0xFFBD])), ('encoder0x0200.wk.0x0000.weight', tensor([[0xFF96,  0x00C7,  0x002C, 0xFFB9, 0xFFD5, 0xFFB3],
        [0xFFB3,  0x004B,  0x0031,  0x0022,  0x0026, 0xFF93],
        [ 0x0024, 0xFF9E, 0xFFA2,  0x006D, 0xFF7E,  0x004E]])), ('encoder0x0200.wk.0x0000.bias', tensor([ 0x0059, 0xFFAE, 0xFFE7])), ('encoder0x0200.wk.0x0100.weight', tensor([[ 0x0039, 0xFFAD,  0x0020,  0x006D,  0x000F,  0x000B],
        [ 0x000D, 0xFF91,  0x001E, 0xFFB2,  0x003C, 0xFFF8],
        [ 0x0008, 0xFFCF,  0x0065,  0x002F, 0xFF80,  0x0062]])), ('encoder0x0200.wk.0x0100.bias', tensor([0xFFDF,  0x0028,  0x0034])), ('encoder0x0200.wv.0x0000.weight', tensor([[ 0x0048,  0x003F,  0x005B,  0x004C, 0xFFA9,  0x0048],
        [0xFFF9,  0x0059,  0x0046,  0x0066,  0x002B, 0xFFC8],
        [0xFFD7,  0x0024, 0xFFEA, 0xFFA2, 0xFFB3, 0xFFC8]])), ('encoder0x0200.wv.0x0000.bias', tensor([0x001B, 0x0049, 0x005C])), ('encoder0x0200.wv.0x0100.weight', tensor([[ 0x0024,  0x0054, 0xFFE2, 0xFFBC, 0xFFC5,  0x003B],
        [0xFFD2, 0xFFB5,  0x006D, 0xFFCB, 0xFFDB, 0xFFD5],
        [0xFFD6,  0x000B, 0xFFBC,  0x0079,  0x0055, 0xFFA4]])), ('encoder0x0200.wv.0x0100.bias', tensor([0xFFBE, 0xFFED,  0x0010])), ('encoder0x0200.wo.weight', tensor([[0xFFA3,  0x0066, 0xFFCC, 0xFFC9, 0xFFEA, 0xFFB0],
        [ 0x005F,  0x0032, 0xFFFD, 0xFFBA,  0x0099, 0xFFFB],
        [0xFFA5,  0x0071,  0x002C, 0xFFC0,  0x001B,  0x0035],
        [ 0x0031, 0xFFB1,  0x0071, 0xFFED,  0x006A, 0xFFCE],
        [ 0x0015,  0x002E,  0x0027,  0x008C, 0xFFC8, 0xFFAC],
        [ 0x0008, 0xFFA9,  0x0004,  0x0051,  0x0033,  0x002A]])), ('encoder0x0200.wo.bias', tensor([0xFFDF,  0x0046, 0xFFC0, 0xFF8C,  0x004B,  0x0016])), ('encoder0x0200.norm0x0100.gamma', tensor([0x0102, 0x011D, 0x00F5, 0x010D, 0x00E6, 0x00FF])), ('encoder0x0200.norm0x0100.beta', tensor([ 0x0017, 0xFFFE, 0xFFFA, 0xFFFE, 0xFFE7,  0x000A])), ('encoder0x0200.ff0x0100.weight', tensor([[ 0x0062,  0x0029, 0xFF81,  0x0089, 0xFFAD,  0x0009],
        [ 0x0036, 0xFF62, 0xFFF5,  0x003E, 0xFFE2,  0x0037],
        [ 0x0043,  0x000B, 0xFF80,  0x004C, 0xFFB1,  0x0012],
        [0xFFC2, 0xFFE3,  0x0087, 0xFFB1,  0x0048, 0xFFF5],
        [0xFFA6,  0x0081, 0xFFD3,  0x0078, 0xFF88, 0xFFF9],
        [0xFFF2, 0xFF78,  0x004D,  0x0016, 0xFFC9, 0xFFD8],
        [ 0x006E, 0xFF67, 0xFF9D, 0xFFEE,  0x0025,  0x0009],
        [ 0x007F,  0x0060,  0x002B, 0xFFA1, 0xFFFC, 0xFFE0],
        [ 0x0013, 0xFFEA,  0x004F, 0xFFCA, 0xFFB5, 0xFFBA],
        [ 0x0090,  0x004D, 0xFF6F, 0xFFBE, 0xFFF4, 0xFFD5],
        [0xFFA8,  0x004E, 0xFFB0,  0x0010,  0x0064, 0xFFD4],
        [0xFFBD,  0x0004,  0x0037,  0x0039, 0xFFD7,  0x0012]])), ('encoder0x0200.ff0x0100.bias', tensor([ 0x0005,  0x0028,  0x000D, 0xFFC6,  0x003F,  0x004F,  0x0022,  0x0032,
         0x001A,  0x002A,  0x001E,  0x0018])), ('encoder0x0200.ff0x0200.weight', tensor([[ 0x001F, 0xFF99, 0xFFE3,  0x0099,  0x002D,  0x0042, 0xFF83,  0x0020,
         0xFFF8, 0xFFAD,  0x001B,  0x0003],
        [0xFFCD,  0x0059,  0x000E, 0xFF9D,  0x001D, 0xFFE1,  0x0039, 0xFF96,
          0x002D, 0xFFD5,  0x002B,  0x000B],
        [0xFFF8, 0xFFC3,  0x002A,  0x0008, 0xFFA1, 0xFFC0,  0x005C,  0x0093,
          0x0021,  0x007F,  0x0013, 0xFF9E],
        [0xFFD4, 0xFFC3,  0x0014, 0xFFE3,  0x0024, 0xFF8C, 0xFFE6, 0xFFF0,
         0xFFC3, 0xFFA6, 0xFFFA, 0xFFF5],
        [ 0x0084,  0x0016,  0x006C,  0x002A,  0x004C,  0x0041, 0xFFF3,  0x0043,
         0xFFF6,  0x0017, 0xFFFF,  0x0004],
        [0xFFCC,  0x004A, 0xFFE6, 0xFFD8,  0x004C,  0x0032, 0xFFDB,  0x0008,
         0xFFEC, 0xFFD7,  0x002A,  0x003D]])), ('encoder0x0200.ff0x0200.bias', tensor([ 0x002E, 0xFFDD, 0xFFEA, 0xFFFC, 0xFFAC, 0xFFD4])), ('encoder0x0200.norm0x0200.gamma', tensor([0x0149, 0x016A, 0x018D, 0x014F, 0x0180, 0x0172])), ('encoder0x0200.norm0x0200.beta', tensor([ 0x0064, 0xFFB1,  0x003B, 0xFFB4,  0x005D, 0xFFBA])), ('fc0x0100.weight', tensor([[0xFFDD,  0x007A, 0xFF24,  0x0054, 0xFFE0,  0x00AB],
        [ 0x0024, 0xFFAB, 0xFF7B,  0x0048, 0xFFC1,  0x006D],
        [ 0x0042, 0xFF2D,  0x0080, 0xFFE5,  0x004A, 0xFF52],
        [ 0x003A, 0xFFE8,  0x00CF, 0xFF45,  0x0073, 0xFF8D],
        [ 0x0092, 0xFF88,  0x0015, 0xFFCB,  0x0085, 0xFF48],
        [ 0x0032,  0x006C, 0xFF4B,  0x0022, 0xFFBB,  0x0080]])), ('fc0x0100.bias', tensor([ 0x0067,  0x001B,  0x0047,  0x000A, 0xFFEE,  0x0078])), ('fc0x0200.weight', tensor([[ 0x006F,  0x0075, 0xFF4C, 0xFF6A, 0xFF2B,  0x0064]])), ('fc0x0200.bias', tensor([0xFFEB]))]), 'optimizer_state_dict': {'state': {0x0000: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0xFFFC, 0x0000, 0xFFFC, 0xFFFD, 0xFFFF, 0xFFFD],
        [0xFFFE,  0x0000, 0xFFFE, 0xFFFF,  0x0000, 0xFFFE],
        [0xFFFF, 0xFFFF, 0xFFFF, 0xFFFE, 0xFFFF, 0xFFFF]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x0100: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFF, 0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x0200: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0001, 0xFFFF,  0x0000, 0x0000, 0x0000,  0x0000],
        [ 0x0001, 0x0000,  0x0001,  0x0001,  0x0000,  0x0001],
        [0xFFFD,  0x0001, 0xFFFE, 0xFFFF, 0x0000, 0xFFFE]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x0300: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0000,  0x0000, 0xFFFF]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x0400: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0000,  0x0002, 0x0000,  0x0002,  0x0001,
         0x0000],
        [ 0x0000, 0xFFFD, 0x0000, 0xFFFC, 0xFFFF,
          0x0000],
        [ 0x0001, 0xFFFF, 0x0000, 0xFFFE, 0x0000,
          0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x0500: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000,  0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x0600: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0002, 0xFFFC, 0x0000,  0x0002, 0xFFFF, 0x0000],
        [0xFFFF,  0x0002,  0x0000, 0xFFFF,  0x0000,  0x0000],
        [ 0x0002, 0xFFFE, 0x0000,  0x0002, 0x0000, 0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x0700: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000,  0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x0800: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0003,  0x0002,  0x0003,  0x0004,  0x0000,  0x0003],
        [0xFFFD,  0x0002,  0x0001, 0xFFFE,  0x0000,  0x0000],
        [0xFFFC,  0x0001,  0x0000, 0xFFFF, 0xFFFF, 0x0000]]), 'exp_avg_sq': tensor([[0x0001, 0x0000, 0x0001, 0x0001, 0x0000, 0x0000],
        [0x0000, 0x0001, 0x0001, 0x0001, 0x0000, 0x0000],
        [0x0001, 0x0001, 0x0001, 0x0001, 0x0000, 0x0000]])}, 0x0900: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000, 0xFFFD, 0xFFFC]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x0A00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0003, 0xFFFE, 0x0000, 0xFFFF,  0x0000, 0x0000],
        [0xFFFD,  0x0001,  0x0000,  0x0001, 0x0000,  0x0000],
        [0xFFFD, 0xFFFB, 0xFFFC, 0xFFFC, 0x0000, 0xFFFD]]), 'exp_avg_sq': tensor([[0x0000, 0x0001, 0x0001, 0x0001, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0001, 0x0001, 0x0001, 0x0000, 0x0000]])}, 0x0B00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0002, 0xFFFF, 0xFFFE]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x0C00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0xFFFC,  0x0006, 0xFFFD,  0x0003, 0xFFFB,  0x0001],
        [0xFFFF,  0x0002,  0x0000,  0x0002, 0xFFFD, 0xFFFF],
        [0xFFFF,  0x0000, 0xFFFE,  0x0001, 0x0000,  0x0002],
        [ 0x0000, 0xFFFE,  0x0000, 0xFFFF,  0x0005, 0xFFFE],
        [ 0x0003, 0xFFFE,  0x0003, 0xFFFF, 0xFFFF,  0x0000],
        [ 0x0002, 0xFFFB,  0x0001, 0xFFFD,  0x0005, 0xFFFE]]), 'exp_avg_sq': tensor([[0x0000, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0001, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0001, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0001, 0x0002, 0x0001, 0x0001, 0x0001, 0x0001],
        [0x0001, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x0D00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0005,  0x0005, 0xFFFD, 0xFFFB,  0x0003, 0xFFFB]), 'exp_avg_sq': tensor([0x0001, 0x0000, 0x0000, 0x0000, 0x0001, 0x0000])}, 0x0E00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0001, 0xFFFD,  0x0000, 0xFFFD,  0x0001,  0x0003]), 'exp_avg_sq': tensor([0x0000, 0x0001, 0x0000, 0x0000, 0x0000, 0x0001])}, 0x0F00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0004,  0x0003, 0xFFFF, 0xFFFE,  0x0001, 0xFFFD]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0001, 0x0000, 0x0001, 0x0001])}, 0x1000: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0xFFFD,  0x0002,  0x0000, 0x0000,  0x0000,
          0x0002],
        [0x0000, 0x0000,  0x0002, 0xFFFE,  0x0000,
          0x0001],
        [ 0x0000,  0x0001,  0x0001, 0xFFFE, 0xFFFF,
          0x0001],
        [ 0x0003, 0xFFFD, 0x0000,  0x0001,  0x0000,
         0xFFFF],
        [ 0x0001,  0x0000, 0xFFFF,  0x0000,  0x0000,
         0xFFFF],
        [ 0x0001, 0xFFFE, 0x0000,  0x0002, 0x0000,
         0xFFFF],
        [0xFFFE,  0x0003, 0xFFFE,  0x0001, 0x0000,
          0x0001],
        [0xFFFE,  0x0002, 0xFFFF,  0x0001, 0x0000,
          0x0000],
        [0x0000, 0xFFFF,  0x0001,  0x0000, 0x0000,
          0x0000],
        [ 0x0000,  0x0000, 0xFFFF,  0x0001, 0x0000,
          0x0000],
        [0xFFFE,  0x0002, 0xFFFF,  0x0001, 0x0000,
         0x0000],
        [ 0x0001,  0x0000,  0x0000, 0x0000, 0xFFFF,
          0x0001]]), 'exp_avg_sq': tensor([[0x0000, 0x0001, 0x0000, 0x0001, 0x0000, 0x0001],
        [0x0001, 0x0000, 0x0000, 0x0002, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0001, 0x0001, 0x0000, 0x0002, 0x0000, 0x0001],
        [0x0000, 0x0000, 0x0000, 0x0001, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0001, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1100: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFE, 0xFFFF, 0xFFFF,  0x0001,  0x0001,  0x0002, 0x0000,  0x0000,
         0x0000,  0x0000,  0x0000, 0xFFFF]), 'exp_avg_sq': tensor([0x0001, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0001, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000])}, 0x1200: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0003,  0x0002,  0x0000,  0x0001, 0x0000,
          0x0001,  0x0002,  0x0004,  0x0002,  0x0000,
          0x0001, 0xFFFF],
        [ 0x0000,  0x0000,  0x0001,  0x0000,  0x0001,
          0x0001, 0xFFFF, 0xFFFF, 0x0000,  0x0000,
          0x0001,  0x0001],
        [ 0x0001,  0x0000, 0x0000, 0x0000, 0x0000,
          0x0000,  0x0000,  0x0001,  0x0000,  0x0000,
          0x0000, 0xFFFF],
        [0xFFFD, 0xFFFF,  0x0000, 0x0000, 0x0000,
          0x0000, 0x0000, 0x0000, 0xFFFE, 0x0000,
         0x0000,  0x0001],
        [ 0x0001,  0x0001, 0x0000,  0x0001,  0x0000,
          0x0000,  0x0000,  0x0001,  0x0001, 0x0000,
          0x0000,  0x0000],
        [0xFFFE, 0xFFFE, 0xFFFF, 0xFFFE, 0x0000,
         0xFFFE, 0xFFFF, 0xFFFC, 0xFFFE, 0x0000,
         0xFFFF, 0xFFFF]]), 'exp_avg_sq': tensor([[0x0001, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0001, 0x0002, 0x0000, 0x0000, 0x0000, 0x0001,
         0x0000, 0x0002, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1300: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0004,  0x0001,  0x0000, 0xFFFF,  0x0001, 0xFFFC]), 'exp_avg_sq': tensor([0x0001, 0x0000, 0x0000, 0x0000, 0x0001, 0x0002])}, 0x1400: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFF, 0xFFFE, 0xFFFF, 0xFFFE,  0x0002,  0x0002]), 'exp_avg_sq': tensor([0x0001, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001])}, 0x1500: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0003,  0x0000,  0x0001, 0xFFFF,  0x0001, 0xFFFE]), 'exp_avg_sq': tensor([0x0001, 0x0000, 0x0000, 0x0000, 0x0001, 0x0001])}, 0x1600: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0001,  0x0000, 0x0000, 0xFFFF, 0x0000,
          0x0000],
        [ 0x0001, 0x0000, 0x0000, 0xFFFF, 0x0000,
          0x0000],
        [0xFFFF, 0x0000,  0x0001,  0x0001, 0x0000,
         0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1700: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000, 0x0000,  0x0001]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x1800: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0000, 0x0000,  0x0000, 0x0000, 0x0000,
          0x0000],
        [ 0x0000,  0x0000, 0x0000, 0x0000, 0x0000,
         0x0000],
        [ 0x0000, 0x0000,  0x0000,  0x0000, 0x0000,
         0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1900: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0000, 0x0000,  0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x1A00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0x0000,  0x0000, 0x0000, 0xFFFF,  0x0001,
         0x0000],
        [ 0x0000,  0x0000, 0x0000, 0x0000,  0x0000,
         0x0000],
        [0x0000,  0x0000, 0x0000,  0x0000,  0x0001,
         0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1B00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000, 0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x1C00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0000, 0x0000, 0x0000,  0x0000, 0x0000,
          0x0000],
        [0x0000,  0x0000,  0x0000,  0x0000, 0x0000,
         0x0000],
        [0x0000,  0x0000, 0x0000,  0x0000,  0x0000,
         0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1D00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000, 0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x1E00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0xFFFF,  0x0002,  0x0001, 0xFFFF, 0xFFFD,  0x0001],
        [ 0x0002, 0xFFFD, 0xFFFE,  0x0001,  0x0003, 0xFFFE],
        [0xFFFF,  0x0001,  0x0000, 0xFFFF, 0x0000,  0x0001]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0001, 0x0000, 0x0000],
        [0x0001, 0x0000, 0x0000, 0x0001, 0x0001, 0x0001],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1F00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFE,  0x0003, 0xFFFF]), 'exp_avg_sq': tensor([0x0001, 0x0001, 0x0000])}, 0x2000: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0x0000,  0x0000,  0x0000, 0xFFFF, 0x0000,  0x0001],
        [0x0000,  0x0002,  0x0001, 0x0000, 0xFFFD,  0x0002],
        [ 0x0000, 0x0000,  0x0000,  0x0000, 0xFFFF,  0x0001]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0001, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x2100: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFF, 0xFFFF, 0xFFFF]), 'exp_avg_sq': tensor([0x0000, 0x0001, 0x0000])}, 0x2200: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0xFFFF,  0x0001, 0x0000, 0xFFFD, 0x0000,  0x0003],
        [ 0x0002,  0x0000,  0x0001,  0x0001,  0x0000, 0xFFFF],
        [0xFFFE, 0x0000, 0xFFFF, 0xFFFF, 0x0000,  0x0001],
        [ 0x0001, 0x0000,  0x0001,  0x0002,  0x0000, 0xFFFE],
        [0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000,  0x0001],
        [ 0x0002, 0x0000,  0x0000,  0x0002,  0x0001, 0xFFFE]]), 'exp_avg_sq': tensor([[0x0000, 0x0001, 0x0000, 0x0001, 0x0000, 0x0001],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0001, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0001, 0x0000, 0x0001, 0x0000, 0x0001]])}, 0x2300: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0003,  0x0000,  0x0000, 0xFFFE,  0x0000, 0xFFFE]), 'exp_avg_sq': tensor([0x0001, 0x0000, 0x0000, 0x0001, 0x0000, 0x0001])}, 0x2400: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0000, 0xFFFF, 0xFFFF, 0xFFFE,  0x0000,  0x0002]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0001, 0x0000, 0x0000, 0x0001])}, 0x2500: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0002,  0x0000, 0x0000, 0xFFFF, 0x0000,
        0xFFFF]), 'exp_avg_sq': tensor([0x0001, 0x0000, 0x0001, 0x0001, 0x0000, 0x0001])}, 0x2600: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0x0000,  0x0002,  0x0000,  0x0000, 0xFFFF,
         0xFFFE],
        [0x0000, 0x0000,  0x0001,  0x0001, 0xFFFF,
         0x0000],
        [ 0x0000,  0x0001, 0x0000,  0x0000, 0x0000,
         0x0000],
        [ 0x0000, 0x0000, 0x0000, 0x0000,  0x0000,
         0x0000],
        [0xFFFF, 0x0000,  0x0000, 0x0000,  0x0000,
          0x0000],
        [0x0000,  0x0001,  0x0000,  0x0000, 0x0000,
         0x0000],
        [ 0x0000,  0x0000, 0x0000, 0x0000, 0x0000,
          0x0000],
        [ 0x0001,  0x0001, 0x0000,  0x0002, 0xFFFE,
         0xFFFE],
        [ 0x0000, 0x0000,  0x0000,  0x0000, 0x0000,
         0x0000],
        [ 0x0001,  0x0000,  0x0000,  0x0000, 0xFFFF,
          0x0000],
        [ 0x0000, 0x0000, 0x0000, 0x0000,  0x0000,
          0x0000],
        [0xFFFF, 0x0000,  0x0001, 0x0000,  0x0000,
          0x0001]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x2700: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0001,  0x0000,  0x0000, 0x0000, 0x0000,
         0x0001,  0x0000,  0x0001,  0x0000,  0x0001,
        0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000])}, 0x2800: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0x0000, 0x0000,  0x0000, 0x0000,  0x0001,
         0xFFFF,  0x0000,  0x0000,  0x0000,  0x0000,
          0x0001,  0x0000],
        [0x0000,  0x0000, 0x0000,  0x0000, 0x0000,
          0x0001, 0x0000, 0x0000,  0x0000, 0x0000,
         0x0000,  0x0000],
        [ 0x0001,  0x0000,  0x0001, 0x0000,  0x0000,
          0x0000,  0x0000,  0x0000,  0x0000,  0x0001,
         0x0000, 0x0000],
        [0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFE,
         0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000,
         0x0000, 0xFFFF],
        [ 0x0001, 0x0000,  0x0000, 0x0000,  0x0001,
         0x0000,  0x0000,  0x0001,  0x0000,  0x0000,
          0x0001,  0x0000],
        [0xFFFF,  0x0000, 0x0000,  0x0000, 0xFFFF,
          0x0001, 0x0000, 0xFFFF, 0x0000, 0xFFFF,
         0xFFFF,  0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0002, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x2900: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0001, 0x0000,  0x0000, 0xFFFF,  0x0001,
        0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0001, 0x0000, 0x0000, 0x0001])}, 0x2A00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000, 0x0000,  0x0000,  0x0000,  0x0000,
         0x0001]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000])}, 0x2B00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0000, 0x0000, 0x0000, 0x0000,  0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000])}, 0x2C00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0x0000,  0x0000, 0x0000,  0x0000, 0x0000,
          0x0000],
        [0x0000, 0x0000, 0x0000,  0x0000, 0x0000,
          0x0000],
        [ 0x0000, 0x0000, 0x0000,  0x0000, 0x0000,
         0x0000],
        [ 0x0000,  0x0000, 0x0000,  0x0000, 0x0000,
         0x0000],
        [0x0000,  0x0002, 0x0000,  0x0000,  0x0000,
         0xFFFE],
        [0x0000,  0x0000, 0x0000,  0x0000, 0x0000,
          0x0001]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x2D00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000])}, 0x2E00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0002,  0x0001, 0x0000, 0x0000, 0xFFFF,  0x0002]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x2F00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0001]), 'exp_avg_sq': tensor([0x0000])}}, 'param_groups': [{'lr': 0x0000, 'betas': (0x00E6, 0x0100), 'eps': 0x0000, 'weight_decay': 0x0000, 'amsgrad': False, 'maximize': False, 'foreach': None, 'capturable': False, 'differentiable': False, 'fused': None, 'params': [0x0000, 0x0100, 0x0200, 0x0300, 0x0400, 0x0500, 0x0600, 0x0700, 0x0800, 0x0900, 0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E00, 0x0F00, 0x1000, 0x1100, 0x1200, 0x1300, 0x1400, 0x1500, 0x1600, 0x1700, 0x1800, 0x1900, 0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F00, 0x2000, 0x2100, 0x2200, 0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900, 0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00, 0x2F00]}]}, 'scaler': StandardScaler()}