Type: <class 'dict'>
Content:
{'model_state_dict': OrderedDict([('encoder0x0100.wq.0x0000.weight', tensor([[0xFF67,  0x0025, 0xFFED,  0x0048, 0xFFEB, 0xFF77],
        [ 0x0013, 0xFF90, 0xFF53, 0xFFC8, 0xFFB8,  0x0014],
        [0xFFDC, 0xFFC6, 0xFFAB,  0x0046,  0x006F, 0xFFD2]])), ('encoder0x0100.wq.0x0000.bias', tensor([0xFFE3,  0x0024,  0x0025])), ('encoder0x0100.wq.0x0100.weight', tensor([[ 0x000B, 0xFFFF, 0xFFC0,  0x0009, 0xFFE0, 0xFF4E],
        [ 0x002E, 0xFFF3, 0xFFAF,  0x0020,  0x004B,  0x0013],
        [ 0x0093,  0x0052,  0x002A,  0x0045,  0x0040,  0x0004]])), ('encoder0x0100.wq.0x0100.bias', tensor([ 0x005F, 0xFFA3, 0xFFB8])), ('encoder0x0100.wk.0x0000.weight', tensor([[ 0x002F,  0x007C, 0xFF6A,  0x0015, 0xFFBD, 0xFF8A],
        [0xFFC3,  0x0052,  0x0003,  0x0059,  0x0034,  0x0006],
        [0xFFF4, 0xFFD0,  0x0001, 0xFF6D,  0x0018, 0xFF7E]])), ('encoder0x0100.wk.0x0000.bias', tensor([0x0053, 0x0001, 0x0017])), ('encoder0x0100.wk.0x0100.weight', tensor([[ 0x000B, 0xFFD0, 0xFFCE,  0x0044,  0x0097,  0x009E],
        [0xFFCD, 0xFFBC,  0x00A2,  0x003A,  0x0023, 0xFF6A],
        [0xFFE1, 0xFFCD,  0x005B, 0xFFA2,  0x002C, 0xFFB0]])), ('encoder0x0100.wk.0x0100.bias', tensor([0xFF9D, 0xFFFB,  0x0007])), ('encoder0x0100.wv.0x0000.weight', tensor([[ 0x0011,  0x0030, 0xFFF1, 0xFFFB, 0xFFE8, 0xFF42],
        [ 0x0045, 0xFFDF,  0x0053,  0x000F, 0xFFCD,  0x0031],
        [ 0x0035,  0x002F, 0xFFC7, 0xFFD9, 0xFFE2, 0xFFFB]])), ('encoder0x0100.wv.0x0000.bias', tensor([0x0013, 0x0035, 0x0058])), ('encoder0x0100.wv.0x0100.weight', tensor([[0xFFD7, 0xFFF4,  0x0029, 0xFFE6,  0x002A,  0x0076],
        [ 0x0037,  0x006B, 0xFFBA, 0xFFDF, 0xFFCA, 0xFFF8],
        [0xFFDF, 0xFFC7,  0x005E,  0x0009,  0x002A, 0xFF86]])), ('encoder0x0100.wv.0x0100.bias', tensor([ 0x007F,  0x003A, 0xFFF4])), ('encoder0x0100.wo.weight', tensor([[ 0x0036,  0x0046, 0xFFE8,  0x0012,  0x0052,  0x0071],
        [0xFFDC, 0xFFD5, 0xFFA7, 0xFFFF,  0x001E, 0xFFC6],
        [ 0x0045, 0xFFA1,  0x0053, 0xFF89, 0xFFA4, 0xFFEC],
        [0xFFF6, 0xFFFB, 0xFFCD,  0x0019,  0x0034, 0xFFDD],
        [0xFF85,  0x003D,  0x0050,  0x003E, 0xFFFA, 0xFFF1],
        [0xFF83,  0x0052, 0xFFB4,  0x00A0,  0x0036, 0xFF6C]])), ('encoder0x0100.wo.bias', tensor([0x0035, 0x000F, 0x0052, 0x0063, 0x0001, 0x0006])), ('encoder0x0100.norm0x0100.gamma', tensor([0x00E4, 0x00F3, 0x012E, 0x010C, 0x0105, 0x0103])), ('encoder0x0100.norm0x0100.beta', tensor([0xFFFD, 0xFFFF, 0xFFF3,  0x0013,  0x0012,  0x000C])), ('encoder0x0100.ff0x0100.weight', tensor([[0xFFEF, 0xFFBE, 0xFFB1, 0xFFE3,  0x0067,  0x0026],
        [0xFFC3,  0x0046, 0xFF5E,  0x0083, 0xFFAD,  0x000B],
        [0xFFB7, 0xFFA1,  0x0075, 0xFFE4, 0xFFEC,  0x002E],
        [0xFFFE,  0x0085, 0xFFEB, 0xFFF9,  0x006F,  0x0015],
        [ 0x0016, 0xFFA0, 0xFF58, 0xFFC9,  0x005C, 0xFF90],
        [ 0x003B, 0xFFC9, 0xFF7F,  0x0028,  0x0030,  0x0023],
        [0xFF8D, 0xFF8D,  0x001A,  0x002F,  0x0096, 0xFFA8],
        [ 0x0040, 0xFF71, 0xFFE0,  0x0023, 0xFFF8,  0x005E],
        [ 0x00AE, 0xFFC2,  0x0034,  0x0037, 0xFF92, 0xFFC4],
        [ 0x000A, 0xFFDB,  0x0034,  0x00B6, 0xFFBE, 0xFFA3],
        [0xFFAF,  0x000F,  0x005B, 0xFFB2, 0xFFD1,  0x00A7],
        [ 0x0048, 0xFFCE,  0x003F,  0x000B,  0x0072,  0x0096]])), ('encoder0x0100.ff0x0100.bias', tensor([0xFFF0, 0xFFDC, 0xFFCD,  0x0001, 0xFFDD, 0xFFC0,  0x0013, 0xFFD4,
         0x0028, 0xFFCD, 0xFF7F, 0xFFA6])), ('encoder0x0100.ff0x0200.weight', tensor([[0xFFED,  0x0062,  0x0011,  0x0016, 0xFF9C,  0x0049, 0xFF7A, 0xFFC1,
         0xFFB0,  0x0067, 0xFF53, 0xFF91],
        [ 0x0050, 0xFFE3, 0xFFBC,  0x001A,  0x003B,  0x0074, 0xFF62, 0xFFB6,
          0x0027,  0x0052,  0x00DF,  0x0029],
        [ 0x0001, 0xFFEB, 0xFF5E, 0xFFC4,  0x000B, 0xFFC2, 0xFFDF,  0x0063,
         0xFFAE,  0x0054, 0xFF55, 0xFFDD],
        [ 0x005B, 0xFF8E,  0x0020, 0xFFF3,  0x003A,  0x000D,  0x0032,  0x0060,
         0xFF9C, 0xFF9E, 0xFFDF, 0xFFCB],
        [ 0x000F, 0xFF96,  0x009B, 0xFF84,  0x0046,  0x006E, 0xFFFD, 0xFFCD,
          0x0047,  0x0037,  0x0084,  0x0068],
        [ 0x0027, 0xFF77,  0x002F,  0x0064,  0x006E,  0x0013,  0x0020,  0x0005,
         0xFFF3, 0xFF85,  0x0041,  0x0064]])), ('encoder0x0100.ff0x0200.bias', tensor([0xFFE1,  0x0028, 0xFFAE,  0x0004, 0xFFE0, 0xFFFC])), ('encoder0x0100.norm0x0200.gamma', tensor([0x00FB, 0x00EC, 0x0129, 0x0156, 0x00F1, 0x00F1])), ('encoder0x0100.norm0x0200.beta', tensor([0xFFD2,  0x0007, 0xFFED,  0x0006,  0x0017,  0x0027])), ('encoder0x0200.wq.0x0000.weight', tensor([[0xFFA9,  0x0017,  0x002B,  0x008B,  0x0007,  0x0006],
        [0xFFCD, 0xFFB4,  0x000B, 0xFF67,  0x0028, 0xFFE6],
        [0xFFC2, 0xFFD9,  0x002C, 0xFFB7,  0x0016,  0x003C]])), ('encoder0x0200.wq.0x0000.bias', tensor([0xFF90,  0x006F, 0xFFBE])), ('encoder0x0200.wq.0x0100.weight', tensor([[ 0x0083,  0x0069, 0xFFDF, 0xFF6E,  0x002E,  0x000C],
        [0xFFE4,  0x0037,  0x003F,  0x0062, 0xFFBF,  0x005F],
        [0xFFD0, 0xFFBC, 0xFFEA,  0x003B,  0x0015, 0xFFB5]])), ('encoder0x0200.wq.0x0100.bias', tensor([0xFFFD,  0x0026, 0xFFB9])), ('encoder0x0200.wk.0x0000.weight', tensor([[0xFFA2,  0x0044,  0x006A,  0x0038,  0x0028,  0x0075],
        [ 0x0070, 0xFFB0,  0x006E,  0x0003, 0xFFC0,  0x0005],
        [0xFFAA,  0x000A,  0x005D,  0x004F, 0xFFC6,  0x0057]])), ('encoder0x0200.wk.0x0000.bias', tensor([0xFFE2, 0xFFF4, 0xFFC8])), ('encoder0x0200.wk.0x0100.weight', tensor([[ 0x0013,  0x004D, 0xFFB0,  0x007E, 0xFF5C, 0xFFE5],
        [0xFF8E,  0x0027, 0xFFB2, 0xFF61,  0x0077, 0xFFDD],
        [ 0x006E, 0xFFE0, 0xFFD2,  0x0040,  0x006B, 0xFFCE]])), ('encoder0x0200.wk.0x0100.bias', tensor([ 0x0016,  0x0068, 0xFFB6])), ('encoder0x0200.wv.0x0000.weight', tensor([[0xFFAA, 0xFFC3,  0x008D, 0xFF60,  0x0032, 0xFFCD],
        [0xFFAF,  0x002D,  0x005B, 0xFFA4, 0xFFA3, 0xFFB6],
        [ 0x004E, 0xFFBF, 0xFFFC, 0xFFEF,  0x0040, 0xFFC0]])), ('encoder0x0200.wv.0x0000.bias', tensor([ 0x0023,  0x0027, 0xFFAF])), ('encoder0x0200.wv.0x0100.weight', tensor([[0xFFF8,  0x0050, 0xFFD8,  0x008A, 0xFF8F, 0xFFE1],
        [0xFFF5, 0xFF95, 0xFFA7,  0x0065,  0x003C,  0x0026],
        [0xFFCE, 0xFFE4,  0x005F, 0xFFFB,  0x002C, 0xFF8D]])), ('encoder0x0200.wv.0x0100.bias', tensor([0x0005, 0x005E, 0x0021])), ('encoder0x0200.wo.weight', tensor([[ 0x0082,  0x0003,  0x006F, 0xFF9B, 0xFF91,  0x007C],
        [0xFFB4, 0xFF8A,  0x008F,  0x003B,  0x0054,  0x0001],
        [0xFFD9, 0xFFA1,  0x0045, 0xFFE7, 0xFFDF,  0x004A],
        [0xFFE0, 0xFFB3,  0x0049,  0x0021,  0x003D, 0xFFE9],
        [ 0x0011, 0xFFD5, 0xFFFC,  0x0060,  0x0051, 0xFFAE],
        [ 0x0009,  0x0027,  0x0044,  0x003B,  0x0088, 0xFFC7]])), ('encoder0x0200.wo.bias', tensor([ 0x004B,  0x0001, 0xFFD4,  0x0036, 0xFFF5,  0x0051])), ('encoder0x0200.norm0x0100.gamma', tensor([0x00F0, 0x00CD, 0x011E, 0x011B, 0x00E6, 0x011E])), ('encoder0x0200.norm0x0100.beta', tensor([0xFFE8, 0xFFDB, 0xFFF8, 0xFFFC,  0x0006,  0x0021])), ('encoder0x0200.ff0x0100.weight', tensor([[ 0x0028,  0x0029, 0xFF34,  0x0087, 0xFFC6, 0xFFB0],
        [0xFFC9,  0x0032, 0xFFC6,  0x007B, 0xFFBA,  0x0018],
        [0xFFDC, 0xFF62,  0x007E,  0x0040,  0x0077,  0x0032],
        [0xFFD4,  0x000E, 0xFF7E, 0xFF52,  0x0070, 0xFF85],
        [ 0x004E,  0x0004, 0xFF3E, 0xFF74, 0xFFFD, 0xFFEA],
        [ 0x0043,  0x00C6,  0x0031,  0x0002, 0xFFA0, 0xFFBC],
        [0xFFED, 0xFFF5,  0x000C,  0x006C, 0xFFB9, 0xFFCA],
        [ 0x0018, 0xFFB9, 0xFF9E,  0x0042, 0xFFF6, 0xFFD2],
        [0xFFF8,  0x0045,  0x0006,  0x0044, 0xFFD2, 0xFFEA],
        [ 0x0020, 0xFFB1,  0x004C,  0x0048,  0x005E,  0x0056],
        [ 0x0025,  0x0020,  0x0009,  0x0070,  0x0063, 0xFF97],
        [0xFFDB,  0x0055, 0xFFBD,  0x0069, 0xFFA5,  0x0080]])), ('encoder0x0200.ff0x0100.bias', tensor([ 0x0003, 0xFFE5, 0xFFD3,  0x0088,  0x0045,  0x0030,  0x006F,  0x0081,
        0xFFC7, 0xFFCD, 0xFFD0,  0x0036])), ('encoder0x0200.ff0x0200.weight', tensor([[0xFFE3,  0x002E, 0xFFCF, 0xFF3B, 0xFF83, 0xFFFD,  0x004F, 0xFFB6,
          0x0048, 0xFF81, 0xFF7A,  0x004A],
        [ 0x0062, 0xFFE8,  0x0088,  0x0090,  0x003E, 0xFFF8, 0xFFD5,  0x005C,
         0xFF98,  0x00B1,  0x0081, 0xFFA0],
        [0xFFFD,  0x0052, 0xFF3E, 0xFF7F, 0xFFE4, 0xFFBB,  0x0049,  0x0017,
          0x005D, 0xFFEB,  0x0008,  0x003A],
        [0xFFBA, 0xFFBC,  0x0055,  0x0076,  0x0099,  0x004B,  0x0014, 0xFFD6,
         0xFFB8,  0x002D,  0x0016, 0xFFCC],
        [0xFFCB, 0xFFD6,  0x0031,  0x0019,  0x0071,  0x00AB, 0xFFC8, 0xFF9B,
          0x0011,  0x0026, 0xFFF9, 0xFFC3],
        [0xFFFB, 0xFFDA,  0x004C,  0x0073,  0x0042,  0x002F, 0xFFCC, 0xFFE8,
         0xFFD1,  0x0073,  0x0040, 0xFFD2]])), ('encoder0x0200.ff0x0200.bias', tensor([0xFFA9,  0x0035,  0x0004, 0x0000,  0x000E,  0x000C])), ('encoder0x0200.norm0x0200.gamma', tensor([0x01E1, 0x014E, 0x0169, 0x00F3, 0x00E3, 0x016F])), ('encoder0x0200.norm0x0200.beta', tensor([0xFFDA,  0x0054, 0xFFC9,  0x0026, 0xFFC6,  0x0003])), ('fc0x0100.weight', tensor([[0xFF67, 0xFFE3,  0x000B, 0xFFFB, 0xFFE4,
          0x007F],
        [0xFF41,  0x003B, 0xFF3E,  0x0010,  0x003A,
         0xFFDE],
        [0xFFC1,  0x0096, 0xFF6D, 0xFFBD, 0xFFE4,
          0x006A],
        [0xFF5B,  0x0053, 0xFF64,  0x0064, 0xFFDC,
          0x0030],
        [ 0x0181, 0xFFEC,  0x0080,  0x0001, 0xFF72,
         0xFFA9],
        [0xFF72,  0x0085, 0xFF4F,  0x0000,  0x0022,
          0x001B]])), ('fc0x0100.bias', tensor([ 0x0020,  0x0083, 0xFFCB,  0x000F,  0x009F, 0xFFFF])), ('fc0x0200.weight', tensor([[0xFF4D, 0xFF4D, 0xFF7C, 0xFF59,  0x00A2, 0xFF50]])), ('fc0x0200.bias', tensor([0x005F]))]), 'optimizer_state_dict': {'state': {0x0000: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0000,  0x0000, 0x0000,  0x0000,  0x0000,
          0x0000],
        [ 0x0000,  0x0000, 0x0000,  0x0000,  0x0000,
          0x0000],
        [0x0000, 0x0000,  0x0000, 0x0000, 0x0000,
         0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x0100: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000, 0x0000,  0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x0200: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0x0000, 0x0000, 0x0000,  0x0000, 0x0000,
          0x0000],
        [0x0000,  0x0000,  0x0000, 0x0000,  0x0000,
          0x0000],
        [ 0x0000,  0x0000,  0x0000,  0x0000,  0x0000,
          0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x0300: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0000, 0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x0400: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0x0000, 0x0000,  0x0000, 0x0000, 0x0000,
          0x0000],
        [0x0000, 0x0000,  0x0000, 0x0000, 0x0000,
         0x0000],
        [ 0x0000,  0x0000, 0x0000, 0x0000,  0x0000,
         0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x0500: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0000,  0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x0600: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0000,  0x0000, 0x0000,  0x0000,  0x0000,
         0x0000],
        [0x0000, 0x0000,  0x0000, 0x0000, 0x0000,
          0x0000],
        [0x0000, 0x0000,  0x0000, 0x0000, 0x0000,
          0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x0700: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0000, 0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x0800: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0000, 0x0000, 0xFFFF,  0x0002,  0x0003,
          0x0003],
        [ 0x0000, 0x0000,  0x0001, 0x0000, 0xFFFE,
         0xFFFF],
        [ 0x0000,  0x0000,  0x0001, 0xFFFF, 0xFFFE,
         0xFFFF]]), 'exp_avg_sq': tensor([[0x0001, 0x0001, 0x0000, 0x0000, 0x0001, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x0900: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFA,  0x0002,  0x0004]), 'exp_avg_sq': tensor([0x0001, 0x0001, 0x0001])}, 0x0A00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0002,  0x0000,  0x0000, 0xFFFE, 0xFFFF,
         0xFFFE],
        [0x0000,  0x0000, 0x0000,  0x0001,  0x0002,
          0x0001],
        [0xFFFF,  0x0000, 0x0000,  0x0003,  0x0002,
          0x0003]]), 'exp_avg_sq': tensor([[0x0001, 0x0001, 0x0000, 0x0000, 0x0001, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0001, 0x0001, 0x0000, 0x0000, 0x0001, 0x0000]])}, 0x0B00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0004, 0xFFFC, 0xFFF8]), 'exp_avg_sq': tensor([0x0002, 0x0001, 0x0002])}, 0x0C00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0xFFFD, 0xFFFF, 0xFFFD, 0xFFFE, 0xFFFD, 0x0000],
        [0xFFFD, 0xFFFE, 0xFFFD, 0xFFFE, 0xFFFD,  0x0000],
        [ 0x0001,  0x0001,  0x0002,  0x0002,  0x0001,  0x0000],
        [0xFFFE, 0xFFFD, 0xFFFE, 0xFFFE, 0xFFFE, 0xFFFF],
        [ 0x0002,  0x0001,  0x0002,  0x0000,  0x0002, 0x0000],
        [ 0x0004,  0x0003,  0x0004,  0x0003,  0x0004,  0x0001]]), 'exp_avg_sq': tensor([[0x0001, 0x0000, 0x0000, 0x0000, 0x0001, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0001, 0x0000, 0x0001, 0x0000, 0x0001, 0x0000],
        [0x0001, 0x0000, 0x0000, 0x0000, 0x0001, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0001, 0x0000, 0x0001, 0x0000, 0x0001, 0x0000]])}, 0x0D00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFF9, 0xFFF9,  0x0005, 0xFFFA,  0x0003,  0x000B]), 'exp_avg_sq': tensor([0x0002, 0x0002, 0x0003, 0x0002, 0x0001, 0x0004])}, 0x0E00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFF,  0x0005,  0x0002, 0xFFFF, 0xFFFE, 0xFFFE]), 'exp_avg_sq': tensor([0x0001, 0x0002, 0x0000, 0x0000, 0x0001, 0x0000])}, 0x0F00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFC, 0xFFFB,  0x0003, 0xFFFD,  0x0002,  0x0009]), 'exp_avg_sq': tensor([0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0002])}, 0x1000: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0000, 0x0000,  0x0000,  0x0000, 0x0000,
          0x0000],
        [ 0x0001, 0xFFFF, 0xFFFF,  0x0000,  0x0002,
          0x0000],
        [ 0x0004, 0xFFFB,  0x0002, 0x0000, 0xFFFF,
         0x0000],
        [0x0000,  0x0001,  0x0001,  0x0000, 0xFFFF,
         0x0000],
        [0x0000, 0x0000,  0x0000, 0x0000,  0x0000,
         0x0000],
        [0xFFFE,  0x0001,  0x0000, 0xFFFF,  0x0001,
          0x0000],
        [0x0000,  0x0000,  0x0001,  0x0001, 0xFFFF,
         0x0000],
        [ 0x0001, 0xFFFF,  0x0000,  0x0001, 0xFFFF,
         0x0000],
        [ 0x0001, 0xFFFC,  0x0001, 0xFFFE,  0x0002,
          0x0001],
        [0xFFFE,  0x0000, 0xFFFE, 0xFFFD,  0x0005,
          0x0001],
        [0xFFFF, 0xFFFF,  0x0003,  0x0002, 0xFFFD,
         0x0000],
        [ 0x0003, 0xFFFD,  0x0001,  0x0001, 0xFFFE,
         0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0001, 0x0001, 0x0001, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0001, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0001, 0x0003, 0x0001, 0x0001, 0x0002, 0x0000],
        [0x0001, 0x0002, 0x0001, 0x0000, 0x0001, 0x0000],
        [0x0000, 0x0002, 0x0002, 0x0000, 0x0002, 0x0000],
        [0x0001, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1100: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000, 0xFFFF,  0x0002,  0x0000, 0x0000,
        0xFFFF,  0x0001,  0x0001, 0xFFFF, 0xFFFB,
         0x0002,  0x0002]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0001, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0001, 0x0001, 0x0001, 0x0001, 0x0000])}, 0x1200: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000,
         0x0000,  0x0000, 0xFFFF, 0xFFFD, 0xFFFE,
         0x0000, 0x0000],
        [ 0x0000, 0xFFFF, 0xFFFF, 0x0000,  0x0000,
         0x0000,  0x0000, 0xFFFE, 0xFFF9, 0xFFFD,
         0x0000, 0x0000],
        [0x0000,  0x0001, 0x0000,  0x0000,  0x0000,
          0x0000, 0x0000,  0x0000,  0x0001,  0x0002,
          0x0000, 0x0000],
        [0x0000,  0x0002, 0xFFFF, 0x0000, 0x0000,
         0x0000,  0x0000, 0xFFFF,  0x0000,  0x0001,
         0x0000, 0x0000],
        [ 0x0000, 0xFFFD,  0x0002,  0x0000,  0x0000,
         0x0000, 0x0000,  0x0001,  0x0002, 0xFFFE,
          0x0000,  0x0000],
        [0x0000,  0x0001,  0x0001, 0x0000, 0x0000,
          0x0000,  0x0000,  0x0003,  0x0007,  0x0004,
          0x0000,  0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0001, 0x0001, 0x0000, 0x0000],
        [0x0000, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0003, 0x0001, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0002, 0x0001, 0x0000, 0x0000],
        [0x0000, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0002, 0x0001, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0001, 0x0000, 0x0000, 0x0000]])}, 0x1300: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFD, 0xFFFC,  0x0001,  0x0002, 0x0000,  0x0004]), 'exp_avg_sq': tensor([0x0000, 0x0001, 0x0002, 0x0001, 0x0001, 0x0000])}, 0x1400: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFF, 0xFFFF, 0xFFFF,  0x0000,  0x0004, 0xFFFE]), 'exp_avg_sq': tensor([0x0000, 0x0003, 0x0000, 0x0000, 0x0002, 0x0000])}, 0x1500: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFE, 0xFFFD,  0x0001,  0x0002, 0xFFFE,  0x0002]), 'exp_avg_sq': tensor([0x0000, 0x0001, 0x0001, 0x0001, 0x0001, 0x0000])}, 0x1600: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0000, 0x0000,  0x0000, 0x0000,  0x0000,
         0x0000],
        [0x0000,  0x0000,  0x0000,  0x0000, 0x0000,
         0x0000],
        [ 0x0000, 0x0000,  0x0000, 0x0000, 0x0000,
         0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1700: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0000, 0x0000,  0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x1800: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0x0000, 0x0000,  0x0000, 0x0000,  0x0000,
          0x0000],
        [ 0x0000,  0x0000, 0x0000,  0x0000, 0x0000,
         0x0000],
        [ 0x0000, 0x0000,  0x0000, 0x0000,  0x0000,
          0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1900: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000,  0x0000,  0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x1A00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0000, 0x0000, 0x0000, 0x0000,  0x0000,
          0x0000],
        [0x0000,  0x0000,  0x0000, 0x0000, 0x0000,
         0x0000],
        [0x0000,  0x0000,  0x0000, 0x0000,  0x0000,
          0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1B00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000, 0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x1C00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0000, 0x0000,  0x0000,  0x0000, 0x0000,
         0x0000],
        [0x0000, 0x0000,  0x0000,  0x0000,  0x0000,
          0x0000],
        [0x0000,  0x0000,  0x0000, 0x0000, 0x0000,
         0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1D00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0000,  0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x1E00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0001, 0x0000, 0x0000,  0x0000, 0x0000,
         0x0000],
        [ 0x0001, 0x0000, 0x0000, 0x0000,  0x0000,
         0x0000],
        [0xFFFF,  0x0000, 0xFFFF,  0x0001,  0x0000,
          0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x1F00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000,  0x0001, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x2000: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0001, 0x0000,  0x0001, 0x0000, 0x0000,
         0xFFFF],
        [ 0x0000, 0x0000,  0x0000, 0x0000,  0x0000,
         0xFFFF],
        [0xFFFF,  0x0000, 0xFFFF,  0x0000,  0x0000,
          0x0001]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x2100: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000,  0x0001, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000])}, 0x2200: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0xFFFF, 0xFFFF,  0x0000,  0x0000,  0x0000, 0x0000],
        [0x0000, 0xFFFE,  0x0001, 0xFFFF,  0x0001, 0x0000],
        [0x0000,  0x0001, 0xFFFF,  0x0000,  0x0000, 0x0000],
        [0x0000,  0x0002, 0xFFFE,  0x0001, 0xFFFF, 0x0000],
        [ 0x0001, 0xFFFF,  0x0002, 0x0000, 0xFFFF,  0x0001],
        [ 0x0000, 0x0000, 0x0000, 0x0000,  0x0001,  0x0001]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0001, 0x0000, 0x0001, 0x0000, 0x0000],
        [0x0000, 0x0001, 0x0000, 0x0001, 0x0001, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x2300: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFF, 0xFFFD,  0x0001,  0x0002, 0xFFFE,  0x0002]), 'exp_avg_sq': tensor([0x0000, 0x0001, 0x0001, 0x0001, 0x0001, 0x0000])}, 0x2400: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFF,  0x0001, 0xFFFE,  0x0000,  0x0002, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x0000])}, 0x2500: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFF, 0xFFFF,  0x0001,  0x0001, 0xFFFF,  0x0002]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0001, 0x0001, 0x0001, 0x0000])}, 0x2600: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0x0000,  0x0000,  0x0000, 0x0000, 0x0000,
          0x0000],
        [0x0000,  0x0001, 0xFFFF,  0x0001, 0x0000,
         0xFFFF],
        [ 0x0001, 0xFFFF,  0x0001, 0xFFFF, 0x0000,
         0x0000],
        [ 0x0000, 0xFFFE,  0x0002, 0x0000,  0x0001,
          0x0000],
        [ 0x0001, 0xFFFD,  0x0002, 0xFFFF,  0x0001,
          0x0000],
        [0x0000, 0xFFFF,  0x0000, 0xFFFF,  0x0001,
          0x0001],
        [0xFFFF,  0x0001, 0xFFFF,  0x0001, 0x0000,
         0xFFFF],
        [ 0x0000,  0x0000,  0x0001, 0xFFFF, 0x0000,
          0x0000],
        [ 0x0000,  0x0000, 0xFFFF,  0x0001, 0x0000,
         0xFFFF],
        [ 0x0004, 0xFFFE,  0x0001, 0xFFFE, 0xFFFF,
          0x0000],
        [ 0x0001, 0x0000,  0x0001, 0xFFFD,  0x0001,
          0x0000],
        [ 0x0000,  0x0001, 0x0000,  0x0002, 0xFFFF,
         0xFFFE]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0001, 0x0001, 0x0000, 0x0000, 0x0001, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x2700: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0000,  0x0001,  0x0001, 0x0000, 0x0000,
        0xFFFF,  0x0000,  0x0000,  0x0001,  0x0002,
        0xFFFF,  0x0001]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000, 0x0001, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000])}, 0x2800: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0003,  0x0001, 0xFFFF,  0x0000,  0x0000,
          0x0001,  0x0001,  0x0001,  0x0001, 0x0000,
          0x0001,  0x0001],
        [0xFFFF, 0xFFFF,  0x0000, 0x0000, 0x0000,
          0x0000, 0x0000, 0xFFFF, 0x0000,  0x0000,
         0x0000, 0x0000],
        [ 0x0001,  0x0001, 0x0000,  0x0000,  0x0000,
          0x0001,  0x0001,  0x0001,  0x0000, 0x0000,
          0x0000,  0x0001],
        [0xFFFF, 0x0000,  0x0000, 0x0000, 0x0000,
         0xFFFF, 0x0000, 0x0000, 0x0000,  0x0000,
         0x0000, 0x0000],
        [0xFFFF, 0x0000,  0x0000, 0x0000, 0x0000,
         0xFFFF, 0xFFFF, 0x0000, 0x0000,  0x0000,
         0x0000, 0xFFFF],
        [0xFFFF, 0x0000,  0x0000,  0x0000,  0x0000,
         0xFFFF, 0xFFFF, 0x0000, 0x0000,  0x0000,
         0x0000, 0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001,
         0x0001, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x2900: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0x0000,  0x0000,  0x0001, 0x0000, 0xFFFF,
         0x0000]), 'exp_avg_sq': tensor([0x0001, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000])}, 0x2A00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFF, 0xFFFF, 0x0000,  0x0000,  0x0000,
         0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000])}, 0x2B00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0001, 0x0000,  0x0001,  0x0000, 0x0000,
        0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000])}, 0x2C00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[ 0x0000, 0x0000,  0x0000,  0x0000, 0x0000,  0x0000],
        [ 0x0000, 0xFFFF, 0x0000, 0x0000,  0x0000,  0x0000],
        [ 0x0000, 0xFFFF,  0x0000, 0x0000,  0x0000,  0x0000],
        [ 0x0000, 0x0000,  0x0000, 0x0000,  0x0000,  0x0000],
        [0x0000,  0x0001, 0x0000,  0x0000, 0x0000, 0xFFFF],
        [ 0x0000, 0xFFFF,  0x0000, 0x0000,  0x0000,  0x0000]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000],
        [0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x2D00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([ 0x0000, 0x0000, 0x0000, 0x0000,  0x0000, 0x0000]), 'exp_avg_sq': tensor([0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000])}, 0x2E00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([[0x0000,  0x0001,  0x0000,  0x0001, 0xFFFF,  0x0001]]), 'exp_avg_sq': tensor([[0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000]])}, 0x2F00: {'step': tensor(0x7FFF.), 'exp_avg': tensor([0xFFFF]), 'exp_avg_sq': tensor([0x0000])}}, 'param_groups': [{'lr': 0x0000, 'betas': (0x00E6, 0x0100), 'eps': 0x0000, 'weight_decay': 0x0000, 'amsgrad': False, 'maximize': False, 'foreach': None, 'capturable': False, 'differentiable': False, 'fused': None, 'params': [0x0000, 0x0100, 0x0200, 0x0300, 0x0400, 0x0500, 0x0600, 0x0700, 0x0800, 0x0900, 0x0A00, 0x0B00, 0x0C00, 0x0D00, 0x0E00, 0x0F00, 0x1000, 0x1100, 0x1200, 0x1300, 0x1400, 0x1500, 0x1600, 0x1700, 0x1800, 0x1900, 0x1A00, 0x1B00, 0x1C00, 0x1D00, 0x1E00, 0x1F00, 0x2000, 0x2100, 0x2200, 0x2300, 0x2400, 0x2500, 0x2600, 0x2700, 0x2800, 0x2900, 0x2A00, 0x2B00, 0x2C00, 0x2D00, 0x2E00, 0x2F00]}]}, 'scaler': StandardScaler()}